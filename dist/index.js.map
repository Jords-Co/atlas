{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/digerati/skipToMainContent.ts", "../src/digerati/currentYear.ts", "../src/atlas/scheduleACall.ts", "../src/atlas/pseudoGroupInsightsByMonth.ts", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "/**\n * Skip to Main Content.\n * \n * @author <cabal@digerati.design>\n */\nexport const skipToMainContent = () => {\n    const trigger = document.querySelector('[dd-skip-to-main-content=\"trigger\"]'),\n        target = document.querySelector('[dd-skip-to-main-content=\"target\"]');\n    if (!trigger || !target) {\n        return;\n    }\n    ['click', 'keypress'].forEach((event) => {\n        trigger.addEventListener(event, (e) => {\n            if (e.type === 'keydown' && e.which !== 13) {\n                return;\n            }\n            e.preventDefault();\n            target.setAttribute('tabindex', '-1');\n            target.focus();\n        });\n    });\n};\n\n", "/**\n * Current Year.\n * \n * @author <cabal@digerati.design>\n */\nexport const currentYear = () => {\n    const target = document.querySelector('[dd-date=\"current-year\"]');\n    if (!target) {\n        return;\n    }\n    const fullYear = new Date().getFullYear();\n    target.innerText = fullYear.toString();\n};\n\n", "/**\n * Schedule a Call.\n * \n * @author <cabal@digerati.design>\n */\nexport const scheduleACall = () => {\n    const calendlyButtons = document.querySelectorAll('[dd-calendly=\"button\"]');\n    if (!calendlyButtons) {\n        return;\n    }\n    calendlyButtons.forEach((calendlyButton) => {\n        calendlyButton.addEventListener('click', function (e) {\n            e.preventDefault();\n            Calendly.initPopupWidget({\n                url: 'https://calendly.com/atlasportfolios/30min?primary_color=1a1a1a'\n            });\n        });\n    });\n};\n\n", "/**\n * Pseudo Group Insights by Month.\n * \n * @author <cabal@digerati.design>\n */\nexport const pseudoGroupInsightsByMonth = () => {\n    const insightMonths = document.querySelectorAll('[dd-insight=\"month\"]');\n    if (!insightMonths) {\n        return;\n    }\n    let previousMonth = '',\n        currentMonth,\n        newMonth;\n    insightMonths.forEach((insightMonth) => {\n        currentMonth = insightMonth.textContent,\n            newMonth = currentMonth !== previousMonth;\n        if (newMonth) {\n            insightMonth.style.display = 'block';\n        }\n        previousMonth = currentMonth;\n    });\n};\n\n", "import { skipToMainContent } from \"$digerati/skipToMainContent\";\nimport { currentYear } from \"$digerati/currentYear\";\nimport { scheduleACall } from \"$atlas/scheduleACall\";\nimport { pseudoGroupInsightsByMonth } from \"$atlas/pseudoGroupInsightsByMonth\";\n\nwindow.Webflow || [];\nwindow.Webflow.push(() => {\n  skipToMainContent();\n  currentYear();\n  scheduleACall();\n  pseudoGroupInsightsByMonth();\n});"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,uBAAY,UAAU,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACKtF,MAAM,oBAAoB,MAAM;AACnC,UAAM,UAAU,SAAS,cAAc,qCAAqC,GACxE,SAAS,SAAS,cAAc,oCAAoC;AACxE,QAAI,CAAC,WAAW,CAAC,QAAQ;AACrB;AAAA,IACJ;AACA,KAAC,SAAS,UAAU,EAAE,QAAQ,CAAC,UAAU;AACrC,cAAQ,iBAAiB,OAAO,CAAC,MAAM;AACnC,YAAI,EAAE,SAAS,aAAa,EAAE,UAAU,IAAI;AACxC;AAAA,QACJ;AACA,UAAE,eAAe;AACjB,eAAO,aAAa,YAAY,IAAI;AACpC,eAAO,MAAM;AAAA,MACjB,CAAC;AAAA,IACL,CAAC;AAAA,EACL;;;AChBO,MAAM,cAAc,MAAM;AAC7B,UAAM,SAAS,SAAS,cAAc,0BAA0B;AAChE,QAAI,CAAC,QAAQ;AACT;AAAA,IACJ;AACA,UAAM,YAAW,oBAAI,KAAK,GAAE,YAAY;AACxC,WAAO,YAAY,SAAS,SAAS;AAAA,EACzC;;;ACPO,MAAM,gBAAgB,MAAM;AAC/B,UAAM,kBAAkB,SAAS,iBAAiB,wBAAwB;AAC1E,QAAI,CAAC,iBAAiB;AAClB;AAAA,IACJ;AACA,oBAAgB,QAAQ,CAAC,mBAAmB;AACxC,qBAAe,iBAAiB,SAAS,SAAU,GAAG;AAClD,UAAE,eAAe;AACjB,iBAAS,gBAAgB;AAAA,UACrB,KAAK;AAAA,QACT,CAAC;AAAA,MACL,CAAC;AAAA,IACL,CAAC;AAAA,EACL;;;ACbO,MAAM,6BAA6B,MAAM;AAC5C,UAAM,gBAAgB,SAAS,iBAAiB,sBAAsB;AACtE,QAAI,CAAC,eAAe;AAChB;AAAA,IACJ;AACA,QAAI,gBAAgB,IAChB,cACA;AACJ,kBAAc,QAAQ,CAAC,iBAAiB;AACpC,qBAAe,aAAa,aACxB,WAAW,iBAAiB;AAChC,UAAI,UAAU;AACV,qBAAa,MAAM,UAAU;AAAA,MACjC;AACA,sBAAgB;AAAA,IACpB,CAAC;AAAA,EACL;;;AChBA,SAAO,WAAW,CAAC;AACnB,SAAO,QAAQ,KAAK,MAAM;AACxB,sBAAkB;AAClB,gBAAY;AACZ,kBAAc;AACd,+BAA2B;AAAA,EAC7B,CAAC;",
  "names": []
}
